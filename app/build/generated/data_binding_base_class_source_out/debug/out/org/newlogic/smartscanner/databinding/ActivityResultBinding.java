// Generated by view binder compiler. Do not edit!
package org.newlogic.smartscanner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.jsibbold.zoomage.ZoomageView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.newlogic.smartscanner.R;

public final class ActivityResultBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FrameLayout Box1;

  @NonNull
  public final FrameLayout Box2;

  @NonNull
  public final TextView docOne;

  @NonNull
  public final FrameLayout docOneBox;

  @NonNull
  public final TextView docThree;

  @NonNull
  public final FrameLayout docThreeBox;

  @NonNull
  public final TextView docTwo;

  @NonNull
  public final FrameLayout docTwoBox;

  @NonNull
  public final EditText editTextAddress;

  @NonNull
  public final EditText editTextAmount;

  @NonNull
  public final EditText editTextCode;

  @NonNull
  public final EditText editTextDateExpiry;

  @NonNull
  public final EditText editTextDateIssue;

  @NonNull
  public final TextView editTextMessage;

  @NonNull
  public final EditText editTextName;

  @NonNull
  public final EditText editTextServiceProvider;

  @NonNull
  public final FrameLayout failed;

  @NonNull
  public final CircleImageView greenTick;

  @NonNull
  public final FrameLayout iconOne;

  @NonNull
  public final FrameLayout iconThree;

  @NonNull
  public final FrameLayout iconTwo;

  @NonNull
  public final TextView imageLabel;

  @NonNull
  public final ZoomageView imageResult;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView serviceProvider;

  @NonNull
  public final TextView textResult;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView toolbarTitle;

  @NonNull
  public final TextView validFrom;

  @NonNull
  public final TextView validTo;

  @NonNull
  public final TextView voucherWritten;

  private ActivityResultBinding(@NonNull ConstraintLayout rootView, @NonNull FrameLayout Box1,
      @NonNull FrameLayout Box2, @NonNull TextView docOne, @NonNull FrameLayout docOneBox,
      @NonNull TextView docThree, @NonNull FrameLayout docThreeBox, @NonNull TextView docTwo,
      @NonNull FrameLayout docTwoBox, @NonNull EditText editTextAddress,
      @NonNull EditText editTextAmount, @NonNull EditText editTextCode,
      @NonNull EditText editTextDateExpiry, @NonNull EditText editTextDateIssue,
      @NonNull TextView editTextMessage, @NonNull EditText editTextName,
      @NonNull EditText editTextServiceProvider, @NonNull FrameLayout failed,
      @NonNull CircleImageView greenTick, @NonNull FrameLayout iconOne,
      @NonNull FrameLayout iconThree, @NonNull FrameLayout iconTwo, @NonNull TextView imageLabel,
      @NonNull ZoomageView imageResult, @NonNull LinearLayout linearLayout,
      @NonNull TextView serviceProvider, @NonNull TextView textResult, @NonNull Toolbar toolbar,
      @NonNull TextView toolbarTitle, @NonNull TextView validFrom, @NonNull TextView validTo,
      @NonNull TextView voucherWritten) {
    this.rootView = rootView;
    this.Box1 = Box1;
    this.Box2 = Box2;
    this.docOne = docOne;
    this.docOneBox = docOneBox;
    this.docThree = docThree;
    this.docThreeBox = docThreeBox;
    this.docTwo = docTwo;
    this.docTwoBox = docTwoBox;
    this.editTextAddress = editTextAddress;
    this.editTextAmount = editTextAmount;
    this.editTextCode = editTextCode;
    this.editTextDateExpiry = editTextDateExpiry;
    this.editTextDateIssue = editTextDateIssue;
    this.editTextMessage = editTextMessage;
    this.editTextName = editTextName;
    this.editTextServiceProvider = editTextServiceProvider;
    this.failed = failed;
    this.greenTick = greenTick;
    this.iconOne = iconOne;
    this.iconThree = iconThree;
    this.iconTwo = iconTwo;
    this.imageLabel = imageLabel;
    this.imageResult = imageResult;
    this.linearLayout = linearLayout;
    this.serviceProvider = serviceProvider;
    this.textResult = textResult;
    this.toolbar = toolbar;
    this.toolbarTitle = toolbarTitle;
    this.validFrom = validFrom;
    this.validTo = validTo;
    this.voucherWritten = voucherWritten;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityResultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_result, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityResultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Box1;
      FrameLayout Box1 = rootView.findViewById(id);
      if (Box1 == null) {
        break missingId;
      }

      id = R.id.Box2;
      FrameLayout Box2 = rootView.findViewById(id);
      if (Box2 == null) {
        break missingId;
      }

      id = R.id.docOne;
      TextView docOne = rootView.findViewById(id);
      if (docOne == null) {
        break missingId;
      }

      id = R.id.docOneBox;
      FrameLayout docOneBox = rootView.findViewById(id);
      if (docOneBox == null) {
        break missingId;
      }

      id = R.id.docThree;
      TextView docThree = rootView.findViewById(id);
      if (docThree == null) {
        break missingId;
      }

      id = R.id.docThreeBox;
      FrameLayout docThreeBox = rootView.findViewById(id);
      if (docThreeBox == null) {
        break missingId;
      }

      id = R.id.docTwo;
      TextView docTwo = rootView.findViewById(id);
      if (docTwo == null) {
        break missingId;
      }

      id = R.id.docTwoBox;
      FrameLayout docTwoBox = rootView.findViewById(id);
      if (docTwoBox == null) {
        break missingId;
      }

      id = R.id.edit_text_address;
      EditText editTextAddress = rootView.findViewById(id);
      if (editTextAddress == null) {
        break missingId;
      }

      id = R.id.edit_text_amount;
      EditText editTextAmount = rootView.findViewById(id);
      if (editTextAmount == null) {
        break missingId;
      }

      id = R.id.edit_text_code;
      EditText editTextCode = rootView.findViewById(id);
      if (editTextCode == null) {
        break missingId;
      }

      id = R.id.edit_text_dateExpiry;
      EditText editTextDateExpiry = rootView.findViewById(id);
      if (editTextDateExpiry == null) {
        break missingId;
      }

      id = R.id.edit_text_dateIssue;
      EditText editTextDateIssue = rootView.findViewById(id);
      if (editTextDateIssue == null) {
        break missingId;
      }

      id = R.id.edit_text_message;
      TextView editTextMessage = rootView.findViewById(id);
      if (editTextMessage == null) {
        break missingId;
      }

      id = R.id.edit_text_name;
      EditText editTextName = rootView.findViewById(id);
      if (editTextName == null) {
        break missingId;
      }

      id = R.id.edit_text_serviceProvider;
      EditText editTextServiceProvider = rootView.findViewById(id);
      if (editTextServiceProvider == null) {
        break missingId;
      }

      id = R.id.failed;
      FrameLayout failed = rootView.findViewById(id);
      if (failed == null) {
        break missingId;
      }

      id = R.id.greenTick;
      CircleImageView greenTick = rootView.findViewById(id);
      if (greenTick == null) {
        break missingId;
      }

      id = R.id.iconOne;
      FrameLayout iconOne = rootView.findViewById(id);
      if (iconOne == null) {
        break missingId;
      }

      id = R.id.iconThree;
      FrameLayout iconThree = rootView.findViewById(id);
      if (iconThree == null) {
        break missingId;
      }

      id = R.id.iconTwo;
      FrameLayout iconTwo = rootView.findViewById(id);
      if (iconTwo == null) {
        break missingId;
      }

      id = R.id.image_label;
      TextView imageLabel = rootView.findViewById(id);
      if (imageLabel == null) {
        break missingId;
      }

      id = R.id.image_result;
      ZoomageView imageResult = rootView.findViewById(id);
      if (imageResult == null) {
        break missingId;
      }

      id = R.id.linear_layout;
      LinearLayout linearLayout = rootView.findViewById(id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.service_provider;
      TextView serviceProvider = rootView.findViewById(id);
      if (serviceProvider == null) {
        break missingId;
      }

      id = R.id.text_result;
      TextView textResult = rootView.findViewById(id);
      if (textResult == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.toolbar_title;
      TextView toolbarTitle = rootView.findViewById(id);
      if (toolbarTitle == null) {
        break missingId;
      }

      id = R.id.valid_from;
      TextView validFrom = rootView.findViewById(id);
      if (validFrom == null) {
        break missingId;
      }

      id = R.id.valid_to;
      TextView validTo = rootView.findViewById(id);
      if (validTo == null) {
        break missingId;
      }

      id = R.id.voucher_written;
      TextView voucherWritten = rootView.findViewById(id);
      if (voucherWritten == null) {
        break missingId;
      }

      return new ActivityResultBinding((ConstraintLayout) rootView, Box1, Box2, docOne, docOneBox,
          docThree, docThreeBox, docTwo, docTwoBox, editTextAddress, editTextAmount, editTextCode,
          editTextDateExpiry, editTextDateIssue, editTextMessage, editTextName,
          editTextServiceProvider, failed, greenTick, iconOne, iconThree, iconTwo, imageLabel,
          imageResult, linearLayout, serviceProvider, textResult, toolbar, toolbarTitle, validFrom,
          validTo, voucherWritten);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
