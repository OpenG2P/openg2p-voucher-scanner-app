// Generated by view binder compiler. Do not edit!
package org.idpass.smartscanner.lib.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.idpass.smartscanner.lib.R;

public final class DialogIdpassVerifyBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatEditText cardPinCode;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final AppCompatButton pinCodeSkip;

  @NonNull
  public final AppCompatButton pinCodeVerify;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView toolbarTitle;

  private DialogIdpassVerifyBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatEditText cardPinCode, @NonNull LinearLayout linearLayout,
      @NonNull AppCompatButton pinCodeSkip, @NonNull AppCompatButton pinCodeVerify,
      @NonNull Toolbar toolbar, @NonNull TextView toolbarTitle) {
    this.rootView = rootView;
    this.cardPinCode = cardPinCode;
    this.linearLayout = linearLayout;
    this.pinCodeSkip = pinCodeSkip;
    this.pinCodeVerify = pinCodeVerify;
    this.toolbar = toolbar;
    this.toolbarTitle = toolbarTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogIdpassVerifyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogIdpassVerifyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_idpass_verify, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogIdpassVerifyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_pin_code;
      AppCompatEditText cardPinCode = rootView.findViewById(id);
      if (cardPinCode == null) {
        break missingId;
      }

      id = R.id.linear_layout;
      LinearLayout linearLayout = rootView.findViewById(id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.pin_code_skip;
      AppCompatButton pinCodeSkip = rootView.findViewById(id);
      if (pinCodeSkip == null) {
        break missingId;
      }

      id = R.id.pin_code_verify;
      AppCompatButton pinCodeVerify = rootView.findViewById(id);
      if (pinCodeVerify == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.toolbar_title;
      TextView toolbarTitle = rootView.findViewById(id);
      if (toolbarTitle == null) {
        break missingId;
      }

      return new DialogIdpassVerifyBinding((ConstraintLayout) rootView, cardPinCode, linearLayout,
          pinCodeSkip, pinCodeVerify, toolbar, toolbarTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
