// Generated by view binder compiler. Do not edit!
package org.idpass.smartscanner.lib.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TableRow;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.idpass.smartscanner.lib.R;

public final class FragmentPassportDetailsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final CardView cardViewAdditionalDocumentInformation;

  @NonNull
  public final CardView cardViewAdditionalPersonInformation;

  @NonNull
  public final CardView cardViewAuthentication;

  @NonNull
  public final CardView cardViewDocumentSigningCertificate;

  @NonNull
  public final CardView cardViewDocuments;

  @NonNull
  public final CardView cardViewPerson;

  @NonNull
  public final CardView cardViewWarning;

  @NonNull
  public final AppCompatImageView iconPhoto;

  @NonNull
  public final ImageView iconWarning;

  @NonNull
  public final TextView labelActive;

  @NonNull
  public final TextView labelAdditionalDocumentInformation;

  @NonNull
  public final TextView labelAdditionalPersonInformation;

  @NonNull
  public final TextView labelAuthentication;

  @NonNull
  public final TextView labelBac;

  @NonNull
  public final TextView labelChip;

  @NonNull
  public final TextView labelCountrySigning;

  @NonNull
  public final TextView labelCustody;

  @NonNull
  public final TextView labelDateIssue;

  @NonNull
  public final TextView labelDateOfBirth;

  @NonNull
  public final TextView labelDatePersonalization;

  @NonNull
  public final TextView labelDocumentSigning;

  @NonNull
  public final TextView labelDocumentSigningCertificate;

  @NonNull
  public final TextView labelDocumentSigningCertificateIssuer;

  @NonNull
  public final TextView labelDocumentSigningCertificatePublicKeyAlgorithm;

  @NonNull
  public final TextView labelDocumentSigningCertificateSerialNumber;

  @NonNull
  public final TextView labelDocumentSigningCertificateSignatureAlgorithm;

  @NonNull
  public final TextView labelDocumentSigningCertificateSubject;

  @NonNull
  public final TextView labelDocumentSigningCertificateThumbprint;

  @NonNull
  public final TextView labelDocumentSigningCertificateValidFrom;

  @NonNull
  public final TextView labelDocumentSigningCertificateValidTo;

  @NonNull
  public final TextView labelEac;

  @NonNull
  public final TextView labelEndorsements;

  @NonNull
  public final TextView labelExpirationDate;

  @NonNull
  public final TextView labelIssuingAuthority;

  @NonNull
  public final TextView labelIssuingState;

  @NonNull
  public final TextView labelNamesOtherPersons;

  @NonNull
  public final TextView labelNationality;

  @NonNull
  public final TextView labelOtherNames;

  @NonNull
  public final TextView labelOtherTdNumbers;

  @NonNull
  public final TextView labelPace;

  @NonNull
  public final TextView labelPassive;

  @NonNull
  public final TextView labelPassportNumber;

  @NonNull
  public final TextView labelPermanentAddress;

  @NonNull
  public final TextView labelPersonalDocuments;

  @NonNull
  public final TextView labelPersonalNumber;

  @NonNull
  public final TextView labelPersonalSummary;

  @NonNull
  public final TextView labelPlaceOfBirth;

  @NonNull
  public final TextView labelProfession;

  @NonNull
  public final TextView labelSystemSerialNumber;

  @NonNull
  public final TextView labelTaxExit;

  @NonNull
  public final TextView labelTelephone;

  @NonNull
  public final TextView labelTitle;

  @NonNull
  public final TextView lname;

  @NonNull
  public final TableRow rowActive;

  @NonNull
  public final TableRow rowBac;

  @NonNull
  public final TableRow rowChip;

  @NonNull
  public final TableRow rowCountrySigning;

  @NonNull
  public final TableRow rowCustody;

  @NonNull
  public final TableRow rowDateIssue;

  @NonNull
  public final TableRow rowDateOfBirth;

  @NonNull
  public final TableRow rowDatePersonalization;

  @NonNull
  public final TableRow rowDocumentCertificateIssuer;

  @NonNull
  public final TableRow rowDocumentCertificateSubject;

  @NonNull
  public final TableRow rowDocumentCertificateValidFrom;

  @NonNull
  public final TableRow rowDocumentCertificateValidTo;

  @NonNull
  public final TableRow rowDocumentSigning;

  @NonNull
  public final TableRow rowDocumentSigningCertificatePublicKeyAlgorithm;

  @NonNull
  public final TableRow rowDocumentSigningCertificateSerialNumber;

  @NonNull
  public final TableRow rowDocumentSigningCertificateSignatureAlgorithm;

  @NonNull
  public final TableRow rowDocumentSigningCertificateThumbprint;

  @NonNull
  public final TableRow rowEac;

  @NonNull
  public final TableRow rowEndorsements;

  @NonNull
  public final TableRow rowExpirationDate;

  @NonNull
  public final TableRow rowIssuingAuthority;

  @NonNull
  public final TableRow rowIssuingState;

  @NonNull
  public final TableRow rowNamesOtherPersons;

  @NonNull
  public final TableRow rowNationality;

  @NonNull
  public final TableRow rowOtherNames;

  @NonNull
  public final TableRow rowOtherTdNumbers;

  @NonNull
  public final TableRow rowPace;

  @NonNull
  public final TableRow rowPassive;

  @NonNull
  public final TableRow rowPassport;

  @NonNull
  public final TableRow rowPermanentAddress;

  @NonNull
  public final TableRow rowPersonalNumber;

  @NonNull
  public final TableRow rowPersonalSummary;

  @NonNull
  public final TableRow rowPlaceOfBirth;

  @NonNull
  public final TableRow rowProfession;

  @NonNull
  public final TableRow rowSystemSerialNumber;

  @NonNull
  public final TableRow rowTaxExit;

  @NonNull
  public final TableRow rowTelephone;

  @NonNull
  public final TableRow rowTitle;

  @NonNull
  public final TextView textWarningMessage;

  @NonNull
  public final TextView textWarningTitle;

  @NonNull
  public final ImageView valueActive;

  @NonNull
  public final ImageView valueBac;

  @NonNull
  public final ImageView valueChip;

  @NonNull
  public final ImageView valueCountrySigning;

  @NonNull
  public final TextView valueCustody;

  @NonNull
  public final TextView valueDOB;

  @NonNull
  public final TextView valueDateIssue;

  @NonNull
  public final TextView valueDateOfBirth;

  @NonNull
  public final TextView valueDatePersonalization;

  @NonNull
  public final ImageView valueDocumentSigning;

  @NonNull
  public final TextView valueDocumentSigningCertificateIssuer;

  @NonNull
  public final TextView valueDocumentSigningCertificatePublicKeyAlgorithm;

  @NonNull
  public final TextView valueDocumentSigningCertificateSerialNumber;

  @NonNull
  public final TextView valueDocumentSigningCertificateSignatureAlgorithm;

  @NonNull
  public final TextView valueDocumentSigningCertificateSubject;

  @NonNull
  public final TextView valueDocumentSigningCertificateThumbprint;

  @NonNull
  public final TextView valueDocumentSigningCertificateValidFrom;

  @NonNull
  public final TextView valueDocumentSigningCertificateValidTo;

  @NonNull
  public final ImageView valueEac;

  @NonNull
  public final TextView valueEndorsements;

  @NonNull
  public final TextView valueExpirationDate;

  @NonNull
  public final TextView valueGender;

  @NonNull
  public final TextView valueIssuingAuthority;

  @NonNull
  public final TextView valueIssuingState;

  @NonNull
  public final TextView valueName;

  @NonNull
  public final TextView valueNamesOtherPersons;

  @NonNull
  public final TextView valueNationality;

  @NonNull
  public final TextView valueOtherNames;

  @NonNull
  public final TextView valueOtherTdNumbers;

  @NonNull
  public final ImageView valuePace;

  @NonNull
  public final ImageView valuePassive;

  @NonNull
  public final TextView valuePassportNumber;

  @NonNull
  public final TextView valuePermanentAddress;

  @NonNull
  public final TextView valuePersonalNumber;

  @NonNull
  public final TextView valuePersonalSummary;

  @NonNull
  public final TextView valuePlaceOfBirth;

  @NonNull
  public final TextView valueProfession;

  @NonNull
  public final TextView valueSystemSerialNumber;

  @NonNull
  public final TextView valueTaxExit;

  @NonNull
  public final TextView valueTelephone;

  @NonNull
  public final TextView valueTitle;

  private FragmentPassportDetailsBinding(@NonNull ScrollView rootView,
      @NonNull CardView cardViewAdditionalDocumentInformation,
      @NonNull CardView cardViewAdditionalPersonInformation,
      @NonNull CardView cardViewAuthentication,
      @NonNull CardView cardViewDocumentSigningCertificate, @NonNull CardView cardViewDocuments,
      @NonNull CardView cardViewPerson, @NonNull CardView cardViewWarning,
      @NonNull AppCompatImageView iconPhoto, @NonNull ImageView iconWarning,
      @NonNull TextView labelActive, @NonNull TextView labelAdditionalDocumentInformation,
      @NonNull TextView labelAdditionalPersonInformation, @NonNull TextView labelAuthentication,
      @NonNull TextView labelBac, @NonNull TextView labelChip,
      @NonNull TextView labelCountrySigning, @NonNull TextView labelCustody,
      @NonNull TextView labelDateIssue, @NonNull TextView labelDateOfBirth,
      @NonNull TextView labelDatePersonalization, @NonNull TextView labelDocumentSigning,
      @NonNull TextView labelDocumentSigningCertificate,
      @NonNull TextView labelDocumentSigningCertificateIssuer,
      @NonNull TextView labelDocumentSigningCertificatePublicKeyAlgorithm,
      @NonNull TextView labelDocumentSigningCertificateSerialNumber,
      @NonNull TextView labelDocumentSigningCertificateSignatureAlgorithm,
      @NonNull TextView labelDocumentSigningCertificateSubject,
      @NonNull TextView labelDocumentSigningCertificateThumbprint,
      @NonNull TextView labelDocumentSigningCertificateValidFrom,
      @NonNull TextView labelDocumentSigningCertificateValidTo, @NonNull TextView labelEac,
      @NonNull TextView labelEndorsements, @NonNull TextView labelExpirationDate,
      @NonNull TextView labelIssuingAuthority, @NonNull TextView labelIssuingState,
      @NonNull TextView labelNamesOtherPersons, @NonNull TextView labelNationality,
      @NonNull TextView labelOtherNames, @NonNull TextView labelOtherTdNumbers,
      @NonNull TextView labelPace, @NonNull TextView labelPassive,
      @NonNull TextView labelPassportNumber, @NonNull TextView labelPermanentAddress,
      @NonNull TextView labelPersonalDocuments, @NonNull TextView labelPersonalNumber,
      @NonNull TextView labelPersonalSummary, @NonNull TextView labelPlaceOfBirth,
      @NonNull TextView labelProfession, @NonNull TextView labelSystemSerialNumber,
      @NonNull TextView labelTaxExit, @NonNull TextView labelTelephone,
      @NonNull TextView labelTitle, @NonNull TextView lname, @NonNull TableRow rowActive,
      @NonNull TableRow rowBac, @NonNull TableRow rowChip, @NonNull TableRow rowCountrySigning,
      @NonNull TableRow rowCustody, @NonNull TableRow rowDateIssue,
      @NonNull TableRow rowDateOfBirth, @NonNull TableRow rowDatePersonalization,
      @NonNull TableRow rowDocumentCertificateIssuer,
      @NonNull TableRow rowDocumentCertificateSubject,
      @NonNull TableRow rowDocumentCertificateValidFrom,
      @NonNull TableRow rowDocumentCertificateValidTo, @NonNull TableRow rowDocumentSigning,
      @NonNull TableRow rowDocumentSigningCertificatePublicKeyAlgorithm,
      @NonNull TableRow rowDocumentSigningCertificateSerialNumber,
      @NonNull TableRow rowDocumentSigningCertificateSignatureAlgorithm,
      @NonNull TableRow rowDocumentSigningCertificateThumbprint, @NonNull TableRow rowEac,
      @NonNull TableRow rowEndorsements, @NonNull TableRow rowExpirationDate,
      @NonNull TableRow rowIssuingAuthority, @NonNull TableRow rowIssuingState,
      @NonNull TableRow rowNamesOtherPersons, @NonNull TableRow rowNationality,
      @NonNull TableRow rowOtherNames, @NonNull TableRow rowOtherTdNumbers,
      @NonNull TableRow rowPace, @NonNull TableRow rowPassive, @NonNull TableRow rowPassport,
      @NonNull TableRow rowPermanentAddress, @NonNull TableRow rowPersonalNumber,
      @NonNull TableRow rowPersonalSummary, @NonNull TableRow rowPlaceOfBirth,
      @NonNull TableRow rowProfession, @NonNull TableRow rowSystemSerialNumber,
      @NonNull TableRow rowTaxExit, @NonNull TableRow rowTelephone, @NonNull TableRow rowTitle,
      @NonNull TextView textWarningMessage, @NonNull TextView textWarningTitle,
      @NonNull ImageView valueActive, @NonNull ImageView valueBac, @NonNull ImageView valueChip,
      @NonNull ImageView valueCountrySigning, @NonNull TextView valueCustody,
      @NonNull TextView valueDOB, @NonNull TextView valueDateIssue,
      @NonNull TextView valueDateOfBirth, @NonNull TextView valueDatePersonalization,
      @NonNull ImageView valueDocumentSigning,
      @NonNull TextView valueDocumentSigningCertificateIssuer,
      @NonNull TextView valueDocumentSigningCertificatePublicKeyAlgorithm,
      @NonNull TextView valueDocumentSigningCertificateSerialNumber,
      @NonNull TextView valueDocumentSigningCertificateSignatureAlgorithm,
      @NonNull TextView valueDocumentSigningCertificateSubject,
      @NonNull TextView valueDocumentSigningCertificateThumbprint,
      @NonNull TextView valueDocumentSigningCertificateValidFrom,
      @NonNull TextView valueDocumentSigningCertificateValidTo, @NonNull ImageView valueEac,
      @NonNull TextView valueEndorsements, @NonNull TextView valueExpirationDate,
      @NonNull TextView valueGender, @NonNull TextView valueIssuingAuthority,
      @NonNull TextView valueIssuingState, @NonNull TextView valueName,
      @NonNull TextView valueNamesOtherPersons, @NonNull TextView valueNationality,
      @NonNull TextView valueOtherNames, @NonNull TextView valueOtherTdNumbers,
      @NonNull ImageView valuePace, @NonNull ImageView valuePassive,
      @NonNull TextView valuePassportNumber, @NonNull TextView valuePermanentAddress,
      @NonNull TextView valuePersonalNumber, @NonNull TextView valuePersonalSummary,
      @NonNull TextView valuePlaceOfBirth, @NonNull TextView valueProfession,
      @NonNull TextView valueSystemSerialNumber, @NonNull TextView valueTaxExit,
      @NonNull TextView valueTelephone, @NonNull TextView valueTitle) {
    this.rootView = rootView;
    this.cardViewAdditionalDocumentInformation = cardViewAdditionalDocumentInformation;
    this.cardViewAdditionalPersonInformation = cardViewAdditionalPersonInformation;
    this.cardViewAuthentication = cardViewAuthentication;
    this.cardViewDocumentSigningCertificate = cardViewDocumentSigningCertificate;
    this.cardViewDocuments = cardViewDocuments;
    this.cardViewPerson = cardViewPerson;
    this.cardViewWarning = cardViewWarning;
    this.iconPhoto = iconPhoto;
    this.iconWarning = iconWarning;
    this.labelActive = labelActive;
    this.labelAdditionalDocumentInformation = labelAdditionalDocumentInformation;
    this.labelAdditionalPersonInformation = labelAdditionalPersonInformation;
    this.labelAuthentication = labelAuthentication;
    this.labelBac = labelBac;
    this.labelChip = labelChip;
    this.labelCountrySigning = labelCountrySigning;
    this.labelCustody = labelCustody;
    this.labelDateIssue = labelDateIssue;
    this.labelDateOfBirth = labelDateOfBirth;
    this.labelDatePersonalization = labelDatePersonalization;
    this.labelDocumentSigning = labelDocumentSigning;
    this.labelDocumentSigningCertificate = labelDocumentSigningCertificate;
    this.labelDocumentSigningCertificateIssuer = labelDocumentSigningCertificateIssuer;
    this.labelDocumentSigningCertificatePublicKeyAlgorithm = labelDocumentSigningCertificatePublicKeyAlgorithm;
    this.labelDocumentSigningCertificateSerialNumber = labelDocumentSigningCertificateSerialNumber;
    this.labelDocumentSigningCertificateSignatureAlgorithm = labelDocumentSigningCertificateSignatureAlgorithm;
    this.labelDocumentSigningCertificateSubject = labelDocumentSigningCertificateSubject;
    this.labelDocumentSigningCertificateThumbprint = labelDocumentSigningCertificateThumbprint;
    this.labelDocumentSigningCertificateValidFrom = labelDocumentSigningCertificateValidFrom;
    this.labelDocumentSigningCertificateValidTo = labelDocumentSigningCertificateValidTo;
    this.labelEac = labelEac;
    this.labelEndorsements = labelEndorsements;
    this.labelExpirationDate = labelExpirationDate;
    this.labelIssuingAuthority = labelIssuingAuthority;
    this.labelIssuingState = labelIssuingState;
    this.labelNamesOtherPersons = labelNamesOtherPersons;
    this.labelNationality = labelNationality;
    this.labelOtherNames = labelOtherNames;
    this.labelOtherTdNumbers = labelOtherTdNumbers;
    this.labelPace = labelPace;
    this.labelPassive = labelPassive;
    this.labelPassportNumber = labelPassportNumber;
    this.labelPermanentAddress = labelPermanentAddress;
    this.labelPersonalDocuments = labelPersonalDocuments;
    this.labelPersonalNumber = labelPersonalNumber;
    this.labelPersonalSummary = labelPersonalSummary;
    this.labelPlaceOfBirth = labelPlaceOfBirth;
    this.labelProfession = labelProfession;
    this.labelSystemSerialNumber = labelSystemSerialNumber;
    this.labelTaxExit = labelTaxExit;
    this.labelTelephone = labelTelephone;
    this.labelTitle = labelTitle;
    this.lname = lname;
    this.rowActive = rowActive;
    this.rowBac = rowBac;
    this.rowChip = rowChip;
    this.rowCountrySigning = rowCountrySigning;
    this.rowCustody = rowCustody;
    this.rowDateIssue = rowDateIssue;
    this.rowDateOfBirth = rowDateOfBirth;
    this.rowDatePersonalization = rowDatePersonalization;
    this.rowDocumentCertificateIssuer = rowDocumentCertificateIssuer;
    this.rowDocumentCertificateSubject = rowDocumentCertificateSubject;
    this.rowDocumentCertificateValidFrom = rowDocumentCertificateValidFrom;
    this.rowDocumentCertificateValidTo = rowDocumentCertificateValidTo;
    this.rowDocumentSigning = rowDocumentSigning;
    this.rowDocumentSigningCertificatePublicKeyAlgorithm = rowDocumentSigningCertificatePublicKeyAlgorithm;
    this.rowDocumentSigningCertificateSerialNumber = rowDocumentSigningCertificateSerialNumber;
    this.rowDocumentSigningCertificateSignatureAlgorithm = rowDocumentSigningCertificateSignatureAlgorithm;
    this.rowDocumentSigningCertificateThumbprint = rowDocumentSigningCertificateThumbprint;
    this.rowEac = rowEac;
    this.rowEndorsements = rowEndorsements;
    this.rowExpirationDate = rowExpirationDate;
    this.rowIssuingAuthority = rowIssuingAuthority;
    this.rowIssuingState = rowIssuingState;
    this.rowNamesOtherPersons = rowNamesOtherPersons;
    this.rowNationality = rowNationality;
    this.rowOtherNames = rowOtherNames;
    this.rowOtherTdNumbers = rowOtherTdNumbers;
    this.rowPace = rowPace;
    this.rowPassive = rowPassive;
    this.rowPassport = rowPassport;
    this.rowPermanentAddress = rowPermanentAddress;
    this.rowPersonalNumber = rowPersonalNumber;
    this.rowPersonalSummary = rowPersonalSummary;
    this.rowPlaceOfBirth = rowPlaceOfBirth;
    this.rowProfession = rowProfession;
    this.rowSystemSerialNumber = rowSystemSerialNumber;
    this.rowTaxExit = rowTaxExit;
    this.rowTelephone = rowTelephone;
    this.rowTitle = rowTitle;
    this.textWarningMessage = textWarningMessage;
    this.textWarningTitle = textWarningTitle;
    this.valueActive = valueActive;
    this.valueBac = valueBac;
    this.valueChip = valueChip;
    this.valueCountrySigning = valueCountrySigning;
    this.valueCustody = valueCustody;
    this.valueDOB = valueDOB;
    this.valueDateIssue = valueDateIssue;
    this.valueDateOfBirth = valueDateOfBirth;
    this.valueDatePersonalization = valueDatePersonalization;
    this.valueDocumentSigning = valueDocumentSigning;
    this.valueDocumentSigningCertificateIssuer = valueDocumentSigningCertificateIssuer;
    this.valueDocumentSigningCertificatePublicKeyAlgorithm = valueDocumentSigningCertificatePublicKeyAlgorithm;
    this.valueDocumentSigningCertificateSerialNumber = valueDocumentSigningCertificateSerialNumber;
    this.valueDocumentSigningCertificateSignatureAlgorithm = valueDocumentSigningCertificateSignatureAlgorithm;
    this.valueDocumentSigningCertificateSubject = valueDocumentSigningCertificateSubject;
    this.valueDocumentSigningCertificateThumbprint = valueDocumentSigningCertificateThumbprint;
    this.valueDocumentSigningCertificateValidFrom = valueDocumentSigningCertificateValidFrom;
    this.valueDocumentSigningCertificateValidTo = valueDocumentSigningCertificateValidTo;
    this.valueEac = valueEac;
    this.valueEndorsements = valueEndorsements;
    this.valueExpirationDate = valueExpirationDate;
    this.valueGender = valueGender;
    this.valueIssuingAuthority = valueIssuingAuthority;
    this.valueIssuingState = valueIssuingState;
    this.valueName = valueName;
    this.valueNamesOtherPersons = valueNamesOtherPersons;
    this.valueNationality = valueNationality;
    this.valueOtherNames = valueOtherNames;
    this.valueOtherTdNumbers = valueOtherTdNumbers;
    this.valuePace = valuePace;
    this.valuePassive = valuePassive;
    this.valuePassportNumber = valuePassportNumber;
    this.valuePermanentAddress = valuePermanentAddress;
    this.valuePersonalNumber = valuePersonalNumber;
    this.valuePersonalSummary = valuePersonalSummary;
    this.valuePlaceOfBirth = valuePlaceOfBirth;
    this.valueProfession = valueProfession;
    this.valueSystemSerialNumber = valueSystemSerialNumber;
    this.valueTaxExit = valueTaxExit;
    this.valueTelephone = valueTelephone;
    this.valueTitle = valueTitle;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPassportDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPassportDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_passport_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPassportDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_view_additional_document_information;
      CardView cardViewAdditionalDocumentInformation = rootView.findViewById(id);
      if (cardViewAdditionalDocumentInformation == null) {
        break missingId;
      }

      id = R.id.card_view_additional_person_information;
      CardView cardViewAdditionalPersonInformation = rootView.findViewById(id);
      if (cardViewAdditionalPersonInformation == null) {
        break missingId;
      }

      id = R.id.card_view_authentication;
      CardView cardViewAuthentication = rootView.findViewById(id);
      if (cardViewAuthentication == null) {
        break missingId;
      }

      id = R.id.card_view_document_signing_certificate;
      CardView cardViewDocumentSigningCertificate = rootView.findViewById(id);
      if (cardViewDocumentSigningCertificate == null) {
        break missingId;
      }

      id = R.id.card_view_documents;
      CardView cardViewDocuments = rootView.findViewById(id);
      if (cardViewDocuments == null) {
        break missingId;
      }

      id = R.id.card_view_person;
      CardView cardViewPerson = rootView.findViewById(id);
      if (cardViewPerson == null) {
        break missingId;
      }

      id = R.id.card_view_warning;
      CardView cardViewWarning = rootView.findViewById(id);
      if (cardViewWarning == null) {
        break missingId;
      }

      id = R.id.iconPhoto;
      AppCompatImageView iconPhoto = rootView.findViewById(id);
      if (iconPhoto == null) {
        break missingId;
      }

      id = R.id.icon_warning;
      ImageView iconWarning = rootView.findViewById(id);
      if (iconWarning == null) {
        break missingId;
      }

      id = R.id.label_active;
      TextView labelActive = rootView.findViewById(id);
      if (labelActive == null) {
        break missingId;
      }

      id = R.id.label_additional_document_information;
      TextView labelAdditionalDocumentInformation = rootView.findViewById(id);
      if (labelAdditionalDocumentInformation == null) {
        break missingId;
      }

      id = R.id.label_additional_person_information;
      TextView labelAdditionalPersonInformation = rootView.findViewById(id);
      if (labelAdditionalPersonInformation == null) {
        break missingId;
      }

      id = R.id.label_authentication;
      TextView labelAuthentication = rootView.findViewById(id);
      if (labelAuthentication == null) {
        break missingId;
      }

      id = R.id.label_bac;
      TextView labelBac = rootView.findViewById(id);
      if (labelBac == null) {
        break missingId;
      }

      id = R.id.label_chip;
      TextView labelChip = rootView.findViewById(id);
      if (labelChip == null) {
        break missingId;
      }

      id = R.id.label_country_signing;
      TextView labelCountrySigning = rootView.findViewById(id);
      if (labelCountrySigning == null) {
        break missingId;
      }

      id = R.id.label_custody;
      TextView labelCustody = rootView.findViewById(id);
      if (labelCustody == null) {
        break missingId;
      }

      id = R.id.label_date_issue;
      TextView labelDateIssue = rootView.findViewById(id);
      if (labelDateIssue == null) {
        break missingId;
      }

      id = R.id.label_date_of_birth;
      TextView labelDateOfBirth = rootView.findViewById(id);
      if (labelDateOfBirth == null) {
        break missingId;
      }

      id = R.id.label_date_personalization;
      TextView labelDatePersonalization = rootView.findViewById(id);
      if (labelDatePersonalization == null) {
        break missingId;
      }

      id = R.id.label_document_signing;
      TextView labelDocumentSigning = rootView.findViewById(id);
      if (labelDocumentSigning == null) {
        break missingId;
      }

      id = R.id.label_document_signing_certificate;
      TextView labelDocumentSigningCertificate = rootView.findViewById(id);
      if (labelDocumentSigningCertificate == null) {
        break missingId;
      }

      id = R.id.label_document_signing_certificate_issuer;
      TextView labelDocumentSigningCertificateIssuer = rootView.findViewById(id);
      if (labelDocumentSigningCertificateIssuer == null) {
        break missingId;
      }

      id = R.id.label_document_signing_certificate_public_key_algorithm;
      TextView labelDocumentSigningCertificatePublicKeyAlgorithm = rootView.findViewById(id);
      if (labelDocumentSigningCertificatePublicKeyAlgorithm == null) {
        break missingId;
      }

      id = R.id.label_document_signing_certificate_serial_number;
      TextView labelDocumentSigningCertificateSerialNumber = rootView.findViewById(id);
      if (labelDocumentSigningCertificateSerialNumber == null) {
        break missingId;
      }

      id = R.id.label_document_signing_certificate_signature_algorithm;
      TextView labelDocumentSigningCertificateSignatureAlgorithm = rootView.findViewById(id);
      if (labelDocumentSigningCertificateSignatureAlgorithm == null) {
        break missingId;
      }

      id = R.id.label_document_signing_certificate_subject;
      TextView labelDocumentSigningCertificateSubject = rootView.findViewById(id);
      if (labelDocumentSigningCertificateSubject == null) {
        break missingId;
      }

      id = R.id.label_document_signing_certificate_thumbprint;
      TextView labelDocumentSigningCertificateThumbprint = rootView.findViewById(id);
      if (labelDocumentSigningCertificateThumbprint == null) {
        break missingId;
      }

      id = R.id.label_document_signing_certificate_valid_from;
      TextView labelDocumentSigningCertificateValidFrom = rootView.findViewById(id);
      if (labelDocumentSigningCertificateValidFrom == null) {
        break missingId;
      }

      id = R.id.label_document_signing_certificate_valid_to;
      TextView labelDocumentSigningCertificateValidTo = rootView.findViewById(id);
      if (labelDocumentSigningCertificateValidTo == null) {
        break missingId;
      }

      id = R.id.label_eac;
      TextView labelEac = rootView.findViewById(id);
      if (labelEac == null) {
        break missingId;
      }

      id = R.id.label_endorsements;
      TextView labelEndorsements = rootView.findViewById(id);
      if (labelEndorsements == null) {
        break missingId;
      }

      id = R.id.label_expiration_date;
      TextView labelExpirationDate = rootView.findViewById(id);
      if (labelExpirationDate == null) {
        break missingId;
      }

      id = R.id.label_issuing_authority;
      TextView labelIssuingAuthority = rootView.findViewById(id);
      if (labelIssuingAuthority == null) {
        break missingId;
      }

      id = R.id.label_issuing_state;
      TextView labelIssuingState = rootView.findViewById(id);
      if (labelIssuingState == null) {
        break missingId;
      }

      id = R.id.label_names_other_persons;
      TextView labelNamesOtherPersons = rootView.findViewById(id);
      if (labelNamesOtherPersons == null) {
        break missingId;
      }

      id = R.id.label_nationality;
      TextView labelNationality = rootView.findViewById(id);
      if (labelNationality == null) {
        break missingId;
      }

      id = R.id.label_other_names;
      TextView labelOtherNames = rootView.findViewById(id);
      if (labelOtherNames == null) {
        break missingId;
      }

      id = R.id.label_other_td_numbers;
      TextView labelOtherTdNumbers = rootView.findViewById(id);
      if (labelOtherTdNumbers == null) {
        break missingId;
      }

      id = R.id.label_pace;
      TextView labelPace = rootView.findViewById(id);
      if (labelPace == null) {
        break missingId;
      }

      id = R.id.label_passive;
      TextView labelPassive = rootView.findViewById(id);
      if (labelPassive == null) {
        break missingId;
      }

      id = R.id.label_passport_number;
      TextView labelPassportNumber = rootView.findViewById(id);
      if (labelPassportNumber == null) {
        break missingId;
      }

      id = R.id.label_permanent_address;
      TextView labelPermanentAddress = rootView.findViewById(id);
      if (labelPermanentAddress == null) {
        break missingId;
      }

      id = R.id.label_personal_documents;
      TextView labelPersonalDocuments = rootView.findViewById(id);
      if (labelPersonalDocuments == null) {
        break missingId;
      }

      id = R.id.label_personal_number;
      TextView labelPersonalNumber = rootView.findViewById(id);
      if (labelPersonalNumber == null) {
        break missingId;
      }

      id = R.id.label_personal_summary;
      TextView labelPersonalSummary = rootView.findViewById(id);
      if (labelPersonalSummary == null) {
        break missingId;
      }

      id = R.id.label_place_of_birth;
      TextView labelPlaceOfBirth = rootView.findViewById(id);
      if (labelPlaceOfBirth == null) {
        break missingId;
      }

      id = R.id.label_profession;
      TextView labelProfession = rootView.findViewById(id);
      if (labelProfession == null) {
        break missingId;
      }

      id = R.id.label_system_serial_number;
      TextView labelSystemSerialNumber = rootView.findViewById(id);
      if (labelSystemSerialNumber == null) {
        break missingId;
      }

      id = R.id.label_tax_exit;
      TextView labelTaxExit = rootView.findViewById(id);
      if (labelTaxExit == null) {
        break missingId;
      }

      id = R.id.label_telephone;
      TextView labelTelephone = rootView.findViewById(id);
      if (labelTelephone == null) {
        break missingId;
      }

      id = R.id.label_title;
      TextView labelTitle = rootView.findViewById(id);
      if (labelTitle == null) {
        break missingId;
      }

      id = R.id.lname;
      TextView lname = rootView.findViewById(id);
      if (lname == null) {
        break missingId;
      }

      id = R.id.row_active;
      TableRow rowActive = rootView.findViewById(id);
      if (rowActive == null) {
        break missingId;
      }

      id = R.id.row_bac;
      TableRow rowBac = rootView.findViewById(id);
      if (rowBac == null) {
        break missingId;
      }

      id = R.id.row_chip;
      TableRow rowChip = rootView.findViewById(id);
      if (rowChip == null) {
        break missingId;
      }

      id = R.id.row_country_signing;
      TableRow rowCountrySigning = rootView.findViewById(id);
      if (rowCountrySigning == null) {
        break missingId;
      }

      id = R.id.row_custody;
      TableRow rowCustody = rootView.findViewById(id);
      if (rowCustody == null) {
        break missingId;
      }

      id = R.id.row_date_issue;
      TableRow rowDateIssue = rootView.findViewById(id);
      if (rowDateIssue == null) {
        break missingId;
      }

      id = R.id.row_date_of_birth;
      TableRow rowDateOfBirth = rootView.findViewById(id);
      if (rowDateOfBirth == null) {
        break missingId;
      }

      id = R.id.row_date_personalization;
      TableRow rowDatePersonalization = rootView.findViewById(id);
      if (rowDatePersonalization == null) {
        break missingId;
      }

      id = R.id.row_document_certificate_issuer;
      TableRow rowDocumentCertificateIssuer = rootView.findViewById(id);
      if (rowDocumentCertificateIssuer == null) {
        break missingId;
      }

      id = R.id.row_document_certificate_subject;
      TableRow rowDocumentCertificateSubject = rootView.findViewById(id);
      if (rowDocumentCertificateSubject == null) {
        break missingId;
      }

      id = R.id.row_document_certificate_valid_from;
      TableRow rowDocumentCertificateValidFrom = rootView.findViewById(id);
      if (rowDocumentCertificateValidFrom == null) {
        break missingId;
      }

      id = R.id.row_document_certificate_valid_to;
      TableRow rowDocumentCertificateValidTo = rootView.findViewById(id);
      if (rowDocumentCertificateValidTo == null) {
        break missingId;
      }

      id = R.id.row_document_signing;
      TableRow rowDocumentSigning = rootView.findViewById(id);
      if (rowDocumentSigning == null) {
        break missingId;
      }

      id = R.id.row_document_signing_certificate_public_key_algorithm;
      TableRow rowDocumentSigningCertificatePublicKeyAlgorithm = rootView.findViewById(id);
      if (rowDocumentSigningCertificatePublicKeyAlgorithm == null) {
        break missingId;
      }

      id = R.id.row_document_signing_certificate_serial_number;
      TableRow rowDocumentSigningCertificateSerialNumber = rootView.findViewById(id);
      if (rowDocumentSigningCertificateSerialNumber == null) {
        break missingId;
      }

      id = R.id.row_document_signing_certificate_signature_algorithm;
      TableRow rowDocumentSigningCertificateSignatureAlgorithm = rootView.findViewById(id);
      if (rowDocumentSigningCertificateSignatureAlgorithm == null) {
        break missingId;
      }

      id = R.id.row_document_signing_certificate_thumbprint;
      TableRow rowDocumentSigningCertificateThumbprint = rootView.findViewById(id);
      if (rowDocumentSigningCertificateThumbprint == null) {
        break missingId;
      }

      id = R.id.row_eac;
      TableRow rowEac = rootView.findViewById(id);
      if (rowEac == null) {
        break missingId;
      }

      id = R.id.row_endorsements;
      TableRow rowEndorsements = rootView.findViewById(id);
      if (rowEndorsements == null) {
        break missingId;
      }

      id = R.id.row_expiration_date;
      TableRow rowExpirationDate = rootView.findViewById(id);
      if (rowExpirationDate == null) {
        break missingId;
      }

      id = R.id.row_issuing_authority;
      TableRow rowIssuingAuthority = rootView.findViewById(id);
      if (rowIssuingAuthority == null) {
        break missingId;
      }

      id = R.id.row_issuing_state;
      TableRow rowIssuingState = rootView.findViewById(id);
      if (rowIssuingState == null) {
        break missingId;
      }

      id = R.id.row_names_other_persons;
      TableRow rowNamesOtherPersons = rootView.findViewById(id);
      if (rowNamesOtherPersons == null) {
        break missingId;
      }

      id = R.id.row_nationality;
      TableRow rowNationality = rootView.findViewById(id);
      if (rowNationality == null) {
        break missingId;
      }

      id = R.id.row_other_names;
      TableRow rowOtherNames = rootView.findViewById(id);
      if (rowOtherNames == null) {
        break missingId;
      }

      id = R.id.row_other_td_numbers;
      TableRow rowOtherTdNumbers = rootView.findViewById(id);
      if (rowOtherTdNumbers == null) {
        break missingId;
      }

      id = R.id.row_pace;
      TableRow rowPace = rootView.findViewById(id);
      if (rowPace == null) {
        break missingId;
      }

      id = R.id.row_passive;
      TableRow rowPassive = rootView.findViewById(id);
      if (rowPassive == null) {
        break missingId;
      }

      id = R.id.row_passport;
      TableRow rowPassport = rootView.findViewById(id);
      if (rowPassport == null) {
        break missingId;
      }

      id = R.id.row_permanent_address;
      TableRow rowPermanentAddress = rootView.findViewById(id);
      if (rowPermanentAddress == null) {
        break missingId;
      }

      id = R.id.row_personal_number;
      TableRow rowPersonalNumber = rootView.findViewById(id);
      if (rowPersonalNumber == null) {
        break missingId;
      }

      id = R.id.row_personal_summary;
      TableRow rowPersonalSummary = rootView.findViewById(id);
      if (rowPersonalSummary == null) {
        break missingId;
      }

      id = R.id.row_place_of_birth;
      TableRow rowPlaceOfBirth = rootView.findViewById(id);
      if (rowPlaceOfBirth == null) {
        break missingId;
      }

      id = R.id.row_profession;
      TableRow rowProfession = rootView.findViewById(id);
      if (rowProfession == null) {
        break missingId;
      }

      id = R.id.row_system_serial_number;
      TableRow rowSystemSerialNumber = rootView.findViewById(id);
      if (rowSystemSerialNumber == null) {
        break missingId;
      }

      id = R.id.row_tax_exit;
      TableRow rowTaxExit = rootView.findViewById(id);
      if (rowTaxExit == null) {
        break missingId;
      }

      id = R.id.row_telephone;
      TableRow rowTelephone = rootView.findViewById(id);
      if (rowTelephone == null) {
        break missingId;
      }

      id = R.id.row_title;
      TableRow rowTitle = rootView.findViewById(id);
      if (rowTitle == null) {
        break missingId;
      }

      id = R.id.textWarningMessage;
      TextView textWarningMessage = rootView.findViewById(id);
      if (textWarningMessage == null) {
        break missingId;
      }

      id = R.id.textWarningTitle;
      TextView textWarningTitle = rootView.findViewById(id);
      if (textWarningTitle == null) {
        break missingId;
      }

      id = R.id.value_active;
      ImageView valueActive = rootView.findViewById(id);
      if (valueActive == null) {
        break missingId;
      }

      id = R.id.value_bac;
      ImageView valueBac = rootView.findViewById(id);
      if (valueBac == null) {
        break missingId;
      }

      id = R.id.value_chip;
      ImageView valueChip = rootView.findViewById(id);
      if (valueChip == null) {
        break missingId;
      }

      id = R.id.value_country_signing;
      ImageView valueCountrySigning = rootView.findViewById(id);
      if (valueCountrySigning == null) {
        break missingId;
      }

      id = R.id.value_custody;
      TextView valueCustody = rootView.findViewById(id);
      if (valueCustody == null) {
        break missingId;
      }

      id = R.id.value_DOB;
      TextView valueDOB = rootView.findViewById(id);
      if (valueDOB == null) {
        break missingId;
      }

      id = R.id.value_date_issue;
      TextView valueDateIssue = rootView.findViewById(id);
      if (valueDateIssue == null) {
        break missingId;
      }

      id = R.id.value_date_of_birth;
      TextView valueDateOfBirth = rootView.findViewById(id);
      if (valueDateOfBirth == null) {
        break missingId;
      }

      id = R.id.value_date_personalization;
      TextView valueDatePersonalization = rootView.findViewById(id);
      if (valueDatePersonalization == null) {
        break missingId;
      }

      id = R.id.value_document_signing;
      ImageView valueDocumentSigning = rootView.findViewById(id);
      if (valueDocumentSigning == null) {
        break missingId;
      }

      id = R.id.value_document_signing_certificate_issuer;
      TextView valueDocumentSigningCertificateIssuer = rootView.findViewById(id);
      if (valueDocumentSigningCertificateIssuer == null) {
        break missingId;
      }

      id = R.id.value_document_signing_certificate_public_key_algorithm;
      TextView valueDocumentSigningCertificatePublicKeyAlgorithm = rootView.findViewById(id);
      if (valueDocumentSigningCertificatePublicKeyAlgorithm == null) {
        break missingId;
      }

      id = R.id.value_document_signing_certificate_serial_number;
      TextView valueDocumentSigningCertificateSerialNumber = rootView.findViewById(id);
      if (valueDocumentSigningCertificateSerialNumber == null) {
        break missingId;
      }

      id = R.id.value_document_signing_certificate_signature_algorithm;
      TextView valueDocumentSigningCertificateSignatureAlgorithm = rootView.findViewById(id);
      if (valueDocumentSigningCertificateSignatureAlgorithm == null) {
        break missingId;
      }

      id = R.id.value_document_signing_certificate_subject;
      TextView valueDocumentSigningCertificateSubject = rootView.findViewById(id);
      if (valueDocumentSigningCertificateSubject == null) {
        break missingId;
      }

      id = R.id.value_document_signing_certificate_thumbprint;
      TextView valueDocumentSigningCertificateThumbprint = rootView.findViewById(id);
      if (valueDocumentSigningCertificateThumbprint == null) {
        break missingId;
      }

      id = R.id.value_document_signing_certificate_valid_from;
      TextView valueDocumentSigningCertificateValidFrom = rootView.findViewById(id);
      if (valueDocumentSigningCertificateValidFrom == null) {
        break missingId;
      }

      id = R.id.value_document_signing_certificate_valid_to;
      TextView valueDocumentSigningCertificateValidTo = rootView.findViewById(id);
      if (valueDocumentSigningCertificateValidTo == null) {
        break missingId;
      }

      id = R.id.value_eac;
      ImageView valueEac = rootView.findViewById(id);
      if (valueEac == null) {
        break missingId;
      }

      id = R.id.value_endorsements;
      TextView valueEndorsements = rootView.findViewById(id);
      if (valueEndorsements == null) {
        break missingId;
      }

      id = R.id.value_expiration_date;
      TextView valueExpirationDate = rootView.findViewById(id);
      if (valueExpirationDate == null) {
        break missingId;
      }

      id = R.id.value_gender;
      TextView valueGender = rootView.findViewById(id);
      if (valueGender == null) {
        break missingId;
      }

      id = R.id.value_issuing_authority;
      TextView valueIssuingAuthority = rootView.findViewById(id);
      if (valueIssuingAuthority == null) {
        break missingId;
      }

      id = R.id.value_issuing_state;
      TextView valueIssuingState = rootView.findViewById(id);
      if (valueIssuingState == null) {
        break missingId;
      }

      id = R.id.value_name;
      TextView valueName = rootView.findViewById(id);
      if (valueName == null) {
        break missingId;
      }

      id = R.id.value_names_other_persons;
      TextView valueNamesOtherPersons = rootView.findViewById(id);
      if (valueNamesOtherPersons == null) {
        break missingId;
      }

      id = R.id.value_nationality;
      TextView valueNationality = rootView.findViewById(id);
      if (valueNationality == null) {
        break missingId;
      }

      id = R.id.value_other_names;
      TextView valueOtherNames = rootView.findViewById(id);
      if (valueOtherNames == null) {
        break missingId;
      }

      id = R.id.value_other_td_numbers;
      TextView valueOtherTdNumbers = rootView.findViewById(id);
      if (valueOtherTdNumbers == null) {
        break missingId;
      }

      id = R.id.value_pace;
      ImageView valuePace = rootView.findViewById(id);
      if (valuePace == null) {
        break missingId;
      }

      id = R.id.value_passive;
      ImageView valuePassive = rootView.findViewById(id);
      if (valuePassive == null) {
        break missingId;
      }

      id = R.id.value_passport_number;
      TextView valuePassportNumber = rootView.findViewById(id);
      if (valuePassportNumber == null) {
        break missingId;
      }

      id = R.id.value_permanent_address;
      TextView valuePermanentAddress = rootView.findViewById(id);
      if (valuePermanentAddress == null) {
        break missingId;
      }

      id = R.id.value_personal_number;
      TextView valuePersonalNumber = rootView.findViewById(id);
      if (valuePersonalNumber == null) {
        break missingId;
      }

      id = R.id.value_personal_summary;
      TextView valuePersonalSummary = rootView.findViewById(id);
      if (valuePersonalSummary == null) {
        break missingId;
      }

      id = R.id.value_place_of_birth;
      TextView valuePlaceOfBirth = rootView.findViewById(id);
      if (valuePlaceOfBirth == null) {
        break missingId;
      }

      id = R.id.value_profession;
      TextView valueProfession = rootView.findViewById(id);
      if (valueProfession == null) {
        break missingId;
      }

      id = R.id.value_system_serial_number;
      TextView valueSystemSerialNumber = rootView.findViewById(id);
      if (valueSystemSerialNumber == null) {
        break missingId;
      }

      id = R.id.value_tax_exit;
      TextView valueTaxExit = rootView.findViewById(id);
      if (valueTaxExit == null) {
        break missingId;
      }

      id = R.id.value_telephone;
      TextView valueTelephone = rootView.findViewById(id);
      if (valueTelephone == null) {
        break missingId;
      }

      id = R.id.value_title;
      TextView valueTitle = rootView.findViewById(id);
      if (valueTitle == null) {
        break missingId;
      }

      return new FragmentPassportDetailsBinding((ScrollView) rootView,
          cardViewAdditionalDocumentInformation, cardViewAdditionalPersonInformation,
          cardViewAuthentication, cardViewDocumentSigningCertificate, cardViewDocuments,
          cardViewPerson, cardViewWarning, iconPhoto, iconWarning, labelActive,
          labelAdditionalDocumentInformation, labelAdditionalPersonInformation, labelAuthentication,
          labelBac, labelChip, labelCountrySigning, labelCustody, labelDateIssue, labelDateOfBirth,
          labelDatePersonalization, labelDocumentSigning, labelDocumentSigningCertificate,
          labelDocumentSigningCertificateIssuer, labelDocumentSigningCertificatePublicKeyAlgorithm,
          labelDocumentSigningCertificateSerialNumber,
          labelDocumentSigningCertificateSignatureAlgorithm, labelDocumentSigningCertificateSubject,
          labelDocumentSigningCertificateThumbprint, labelDocumentSigningCertificateValidFrom,
          labelDocumentSigningCertificateValidTo, labelEac, labelEndorsements, labelExpirationDate,
          labelIssuingAuthority, labelIssuingState, labelNamesOtherPersons, labelNationality,
          labelOtherNames, labelOtherTdNumbers, labelPace, labelPassive, labelPassportNumber,
          labelPermanentAddress, labelPersonalDocuments, labelPersonalNumber, labelPersonalSummary,
          labelPlaceOfBirth, labelProfession, labelSystemSerialNumber, labelTaxExit, labelTelephone,
          labelTitle, lname, rowActive, rowBac, rowChip, rowCountrySigning, rowCustody,
          rowDateIssue, rowDateOfBirth, rowDatePersonalization, rowDocumentCertificateIssuer,
          rowDocumentCertificateSubject, rowDocumentCertificateValidFrom,
          rowDocumentCertificateValidTo, rowDocumentSigning,
          rowDocumentSigningCertificatePublicKeyAlgorithm,
          rowDocumentSigningCertificateSerialNumber,
          rowDocumentSigningCertificateSignatureAlgorithm, rowDocumentSigningCertificateThumbprint,
          rowEac, rowEndorsements, rowExpirationDate, rowIssuingAuthority, rowIssuingState,
          rowNamesOtherPersons, rowNationality, rowOtherNames, rowOtherTdNumbers, rowPace,
          rowPassive, rowPassport, rowPermanentAddress, rowPersonalNumber, rowPersonalSummary,
          rowPlaceOfBirth, rowProfession, rowSystemSerialNumber, rowTaxExit, rowTelephone, rowTitle,
          textWarningMessage, textWarningTitle, valueActive, valueBac, valueChip,
          valueCountrySigning, valueCustody, valueDOB, valueDateIssue, valueDateOfBirth,
          valueDatePersonalization, valueDocumentSigning, valueDocumentSigningCertificateIssuer,
          valueDocumentSigningCertificatePublicKeyAlgorithm,
          valueDocumentSigningCertificateSerialNumber,
          valueDocumentSigningCertificateSignatureAlgorithm, valueDocumentSigningCertificateSubject,
          valueDocumentSigningCertificateThumbprint, valueDocumentSigningCertificateValidFrom,
          valueDocumentSigningCertificateValidTo, valueEac, valueEndorsements, valueExpirationDate,
          valueGender, valueIssuingAuthority, valueIssuingState, valueName, valueNamesOtherPersons,
          valueNationality, valueOtherNames, valueOtherTdNumbers, valuePace, valuePassive,
          valuePassportNumber, valuePermanentAddress, valuePersonalNumber, valuePersonalSummary,
          valuePlaceOfBirth, valueProfession, valueSystemSerialNumber, valueTaxExit, valueTelephone,
          valueTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
